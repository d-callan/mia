% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformCounts.R
\name{transformAssay}
\alias{transformAssay}
\alias{transformAssay,SummarizedExperiment-method}
\title{Transform assay}
\usage{
transformAssay(
  x,
  assay.type = "counts",
  assay_name = NULL,
  method = c("alr", "chi.square", "clr", "frequency", "hellinger", "log", "log10",
    "log2", "max", "normalize", "pa", "range", "rank", "rclr", "relabundance", "rrank",
    "standardize", "total", "z"),
  MARGIN = "samples",
  name = method,
  pseudocount = FALSE,
  ...
)

\S4method{transformAssay}{SummarizedExperiment}(
  x,
  assay.type = "counts",
  assay_name = NULL,
  method = c("alr", "chi.square", "clr", "frequency", "hellinger", "log", "log10",
    "log2", "max", "normalize", "pa", "range", "rank", "rclr", "relabundance", "rrank",
    "standardize", "total", "z"),
  MARGIN = "samples",
  name = method,
  pseudocount = FALSE,
  ...
)
}
\arguments{
\item{x}{\code{\link[TreeSummarizedExperiment:TreeSummarizedExperiment-class]{TreeSummarizedExperiment}}.}

\item{assay.type}{\code{Character scalar}. Specifies which assay to use for
calculation. (Default: \code{"counts"})}

\item{assay_name}{Deprecated. Use \code{assay.type} instead.}

\item{method}{\code{Character scalar}. Specifies the transformation
method.}

\item{MARGIN}{\code{Character scalar}. Determines whether the
transformation is applied sample (column) or feature (row) wise.
(Default: \code{"samples"})}

\item{name}{\code{Character scalar}. A name for the column of the
\code{colData} where results will be stored. (Default: \code{"method"})}

\item{pseudocount}{\code{Logical scalar} or \code{numeric scalar}.
When \code{TRUE}, automatically adds half of the minimum positive
value of \code{assay.type} (missing values ignored by default:
\code{na.rm = TRUE}).
When FALSE, does not add any pseudocount (pseudocount = 0).
Alternatively, a user-specified numeric value can be added as pseudocount.
(Default: \code{FALSE}).}

\item{...}{additional arguments passed on to \code{vegan:decostand}:
\itemize{
\item \code{reference}: \code{Character scalar}. use to
to fill reference sample's column in returned assay when calculating alr.
(Default: \code{NA})
\item \code{ref_vals} Deprecated. Use \code{reference} instead.
}}
}
\value{
\code{transformAssay} returns the input object \code{x}, with a new
transformed abundance table named \code{name} added in the \code{\link{assay}}.
}
\description{
Variety of transformations for abundance data, stored in \code{assay}.
See details for options.
}
\details{
\code{transformAssay} function provides a variety of options for
transforming abundance data. The transformed data is calculated and stored
in a new \code{assay}.

The \code{transformAssay} provides sample-wise (column-wise) or feature-wise
(row-wise) transformation to the abundance table
(assay) based on specified \code{MARGIN}.

The available transformation methods include:

\itemize{

\item 'alr', 'chi.square', 'clr', 'frequency', 'hellinger', 'log', 'normalize', 'pa', 'rank', 'rclr'
'relabundance', 'rrank', 'standardize', 'total': please refer to
\code{\link[vegan:decostand]{decostand}} for details.

\item 'log10': log10 transformation can be used for reducing the skewness
of the data.
\deqn{log10 = \log_{10} x}{%
log10 = log10(x)}
where \eqn{x} is a single value of data.

\item 'log2': log2 transformation can be used for reducing the skewness of
the data.
\deqn{log2 = \log_{2} x}{%
log2 = log2(x)}
where \eqn{x} is a single value of data.

}
}
\examples{
data(esophagus, package="mia")
tse <- esophagus

# By specifying 'method', it is possible to apply different transformations, 
# e.g. compositional transformation.
tse <- transformAssay(tse, method = "relabundance")

# The target of transformation can be specified with "assay.type"
# Pseudocount can be added by specifying 'pseudocount'.

# Perform CLR with smallest positive value as pseudocount
tse <- transformAssay(tse, assay.type = "relabundance", method = "clr", 
                     pseudocount = TRUE
                     )
                      
head(assay(tse, "clr"))

# With MARGIN, you can specify the if transformation is done for samples or
# for features. Here Z-transformation is done feature-wise.
tse <- transformAssay(tse, method = "standardize", MARGIN = "features")
head(assay(tse, "standardize"))

# Name of the stored table can be specified.
tse <- transformAssay(tse, method="hellinger", name="test")
head(assay(tse, "test"))

# pa returns presence absence table.
tse <- transformAssay(tse, method = "pa")
head(assay(tse, "pa"))

# rank returns ranks of taxa.
tse <- transformAssay(tse, method = "rank")
head(assay(tse, "rank"))

# In order to use other ranking variants, modify the chosen assay directly:
assay(tse, "rank_average", withDimnames = FALSE) <- colRanks(
    assay(tse, "counts"), ties.method = "average", preserveShape = TRUE)  

}
\author{
Leo Lahti and Tuomas Borman. Contact: \url{microbiome.github.io}
}
